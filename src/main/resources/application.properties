# ServerProperties
server.port=8080
server.servlet.context-path=/community

# ThymeleafProperties
spring.thymeleaf.cache=false

# DataSourceProperties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000

# MybatisProperties
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.nowcoder.community.entity
mybatis.configuration.useGeneratedKeys=true
mybatis.configuration.mapUnderscoreToCamelCase=true

# logger
logging.level.com.nowcoder.community=debug

# MailProperties
spring.mail.host=smtp.sina.com
spring.mail.port=465
spring.mail.username=now_ommunity@sina.com
spring.mail.password=edfb704f2767dad1
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.ssl.enable=true
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.properties.mail.smtp.starttls.required=true

# community
community.path.domain=http://localhost:8080
community.path.upload=d:/work/data/upload

# RedisProperties
spring.redis.database=11
spring.redis.host=localhost
spring.redis.port=6379

# kafkaProperties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=test-consumer-group
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=3000

# ElasticsearchProperties
spring.data.elasticsearch.cluster-name=nowcoder
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300

# TaskExecutionProperties
# 核心线程数量是5,就是说线程池创建好以后线程数量默认是5，
# 但是当线程使用频繁不够用时会扩容，最大扩到15
# 当一直有任务提交到线程池，15个还是不够用时，就会先将任务放到一个队列里，等有线程空闲的时候再去队列中取，起一个缓冲的作用queue-capacity
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=15
spring.task.execution.pool.queue-capacity=100

# TaskSchedulingProperties
spring.task.scheduling.pool.size=5

# QuartzProperties
spring.quartz.job-store-type=jdbc
spring.quartz.scheduler-name=communityScheduler
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.jobStore.class=org.springframework.scheduling.quartz.LocalDataSourceJobStore
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=5

# wk
wk.image.command=d:/work/wkhtmltopdf/bin/wkhtmltoimage
wk.image.storage=d:/work/data/wk-images

# qiniu
qiniu.key.access=mfyqbmXME4lpv5vM4iq6-qanbZRsLYBM78B4rt4o
qiniu.key.secret=BoSOEiDjf8aT5KqwlRqOU85cuqdGkXrTa5KApk6u
qiniu.bucket.header.name=ncommunity-header
quniu.bucket.header.url=http://rau4pl80e.hb-bkt.clouddn.com
qiniu.bucket.share.name=ncommunity-share
qiniu.bucket.share.url=http://rau54k14d.hb-bkt.clouddn.com

# caffeine
# 都是自定义的配置   #post是帖子的意思，如果要缓存评论可以caffeine.comment
# 第一个表示缓存15页帖子  # 第二个表示，存到缓存里的数据到3分钟，自动就会被清理掉，这叫自动淘汰。 还有一种主动淘汰，是帖子更新了，会淘汰掉缓存中的这个帖子。
# 这里只有自动淘汰，没有主动淘汰，因为我们是一页一页缓存的，如果一个帖子更新了，把这一页的帖子都刷掉，不合适
# 就是说，这一页帖子，评论点赞之类的数量，在这3分钟内会有一定延迟，和真实数量对不上，但不影响使用。
caffeine.posts.max-size=15
caffeine.posts.expire-seconds=180

# actuator 暴露的和隐藏的端点
management.endpoints.web.exposure.include=*
management.endpoints.web.exposure.exclude=info,caches

